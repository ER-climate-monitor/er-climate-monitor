openapi: 3.0.0
info:
  title: User Management API
  version: 1.0.0
  description: API documentation for user registration, login, token verification, and deletion.
servers:
  - url: http://localhost:7777
    description: Local development server
paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: User's actions (Register)
                userEmail:
                  type: string
                  description: User's email address
                userPassword:
                  type: string
                  description: User's password
      responses:
        201:
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  userEmail:
                    type: string
                    description: Admin's email address
                  userToken:
                    type: string
                    description: User's JWT token
                  userTokenExpiration:
                    type: number
                    description: User's JWT token expiration date
        400:
          description: Bad request

  /admin/register:
    post:
      summary: Register a new admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: User's actions (Register)
                userEmail:
                  type: string
                  description: Admin's email address
                userPassword:
                  type: string
                  description: Admin's password
                apiKey:
                  type: string
                  description: Admin API key
      responses:
        201:
          description: Admin registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  userEmail:
                    type: string
                    description: Admin's email address
                  userToken:
                    type: string
                    description: U  ser's JWT token
                  userTokenExpiration:
                    type: number
                    description: User's JWT token expiration date
        401:
          description: Unauthorized

  /login:
    post:
      summary: Login as a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: User's actions (Login)
                userEmail:
                  type: string
                  description: User's email address
                userPassword:
                  type: string
                  description: User's password
      responses:
        200:
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  userEmail:
                    type: string
                    description: Admin's email address
                  userToken:
                    type: string
                    description: U  ser's JWT token
                  userTokenExpiration:
                    type: number
                    description: User's JWT token expiration date
        400:
          description: Bad request
  /admin/login:
    post:
      summary: Login as an admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: User's actions (Login)
                userEmail:
                  type: string
                  description: Admin's email address
                userPassword:
                  type: string
                  description: Admin's password
                apiKey:
                  type: string
                  description: Admin API key
      responses:

        200:
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  userEmail:
                    type: string
                    description: Admin's email address
                  userToken:
                    type: string
                    description: U  ser's JWT token
                  userTokenExpiration:
                    type: number
                    description: User's JWT token expiration date
        401:
          description: Unauthorized

  /authorized:
    post:
      summary: Verify JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: User's actions (Authenticate)
                userToken:
                  type: string
                  description: JWT token
      responses:
        202:
          description: Token verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  userTokenExpiration:
                    type: number
                    description: User's JWT token expiration date
        401:
          description: Unauthorized
        400:
          description: Bad request

  /delete:
    delete:
      summary: Delete a user
      parameters:
        - in: query
          name: userEmail
          required: true
          schema:
            type: string
            description: User's email
            example: 'gatteoMare98909@gmail.com'
        - in: header
          name: x-user-token
          required: true
          schema:
            type: string
            description: User's token
            example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NzhhNTdhN2VkOWFhZDc3ZjQ4ZGU1YjkiLCJ1c2VyRW1haWwiOiJ0ZXN0ZW1haWw5ODkwOUBnbWFpbC5jb20iLCJ1c2VyUm9sZSI6ImFkbWluIiwiaWF0IjoxNzM3NjI3MzQ1LCJleHAiOjE3Mzc2MzA5NDV9.twmZ7NKAWHNIKOqLHQZ3Rtjiu6ATQKweCI2fL16AIHE'

      responses:
        200:
          description: User deleted successfully
        401:
          description: The input user does not exist or the token is not valid.

  /admin/delete:
    delete:
      summary: Delete an admin
      parameters:
        - in: query
          name: userEmail
          required: true
          schema:
            type: string
            description: User's email
            example: 'gatteoMare98909@gmail.com'
        - in: header
          name: x-user-token
          required: true
          schema:
            type: string
            description: User's token
            example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NzhhNTdhN2VkOWFhZDc3ZjQ4ZGU1YjkiLCJ1c2VyRW1haWwiOiJ0ZXN0ZW1haWw5ODkwOUBnbWFpbC5jb20iLCJ1c2VyUm9sZSI6ImFkbWluIiwiaWF0IjoxNzM3NjI3MzQ1LCJleHAiOjE3Mzc2MzA5NDV9.twmZ7NKAWHNIKOqLHQZ3Rtjiu6ATQKweCI2fL16AIHE'
        - in: header
          name: x-api-key
          required: true
          schema:
            type: string
            description: Admin api key
      responses:
        200:
          description: Admin deleted successfully
        401:
          description: Unauthorized
        400:
          description: Bad request
